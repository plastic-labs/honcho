"""rename metamessage_type to label

Revision ID: 20f89a421aff
Revises: 556a16564f50
Create Date: 2025-05-13 16:11:54.859842

"""

from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "20f89a421aff"
down_revision: Union[str, None] = "556a16564f50"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "metamessages",
        "metamessage_type",
        new_column_name="label",
        existing_type=sa.TEXT(),
    )

    # Drop old indexes
    op.drop_index("idx_metamessages_lookup", table_name="metamessages")
    op.drop_index("idx_metamessages_user_lookup", table_name="metamessages")
    op.drop_index("idx_metamessages_session_lookup", table_name="metamessages")
    op.drop_index("idx_metamessages_message_lookup", table_name="metamessages")

    # Create new indexes with the 'label' column
    op.create_index(
        "idx_metamessages_lookup",
        "metamessages",
        ["label", sa.text("id DESC")],
        unique=False,
        postgresql_include=["public_id", "message_id", "created_at"],
    )
    op.create_index(
        "idx_metamessages_user_lookup",
        "metamessages",
        ["user_id", "label", sa.text("id DESC")],
        unique=False,
    )
    op.create_index(
        "idx_metamessages_session_lookup",
        "metamessages",
        ["session_id", "label", sa.text("id DESC")],
        unique=False,
    )
    op.create_index(
        "idx_metamessages_message_lookup",
        "metamessages",
        ["message_id", "label", sa.text("id DESC")],
        unique=False,
    )

    # Rename check constraint
    op.execute("ALTER TABLE metamessages DROP CONSTRAINT metamessage_type_length;")
    op.create_check_constraint("label_length", "metamessages", "length(label) <= 512")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "metamessages",
        "label",
        new_column_name="metamessage_type",
        existing_type=sa.TEXT(),
    )

    # Drop new indexes
    op.drop_index("idx_metamessages_lookup", table_name="metamessages")
    op.drop_index("idx_metamessages_user_lookup", table_name="metamessages")
    op.drop_index("idx_metamessages_session_lookup", table_name="metamessages")
    op.drop_index("idx_metamessages_message_lookup", table_name="metamessages")

    # Create old indexes with 'metamessage_type'
    op.create_index(
        "idx_metamessages_lookup",
        "metamessages",
        ["metamessage_type", sa.text("id DESC")],
        unique=False,
        postgresql_include=["public_id", "message_id", "created_at"],
    )
    op.create_index(
        "idx_metamessages_user_lookup",
        "metamessages",
        ["user_id", "metamessage_type", sa.text("id DESC")],
        unique=False,
    )
    op.create_index(
        "idx_metamessages_session_lookup",
        "metamessages",
        ["session_id", "metamessage_type", sa.text("id DESC")],
        unique=False,
    )
    op.create_index(
        "idx_metamessages_message_lookup",
        "metamessages",
        ["message_id", "metamessage_type", sa.text("id DESC")],
        unique=False,
    )

    # Revert check constraint rename
    op.execute("ALTER TABLE metamessages DROP CONSTRAINT label_length;")
    op.create_check_constraint(
        "metamessage_type_length",
        "metamessages",
        "length(metamessage_type) <= 512",
    )
    # ### end Alembic commands ###
